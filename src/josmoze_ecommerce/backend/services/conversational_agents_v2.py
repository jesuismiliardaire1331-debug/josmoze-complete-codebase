#!/usr/bin/env python3
"""
ü§ñ SYST√àME CONVERSATIONNEL OSMOSE V2.0 - ENRICHI CONTENU MARKETING
=================================================================
Agents IA ultra-performants avec nouveau contenu valid√©
- Expertise approfondie sur nitrates, pesticides, chlore
- Int√©gration articles blog optimis√©s
- Connaissance nouveaux produits (fontaine animaux, sac transport, distributeur)
- Strat√©gies commerciales renforc√©es
"""

import openai
from openai import OpenAI
from twilio.rest import Client
import os
import json
from datetime import datetime, timedelta
from typing import Dict, List, Optional
import asyncio

# Configuration
client = OpenAI(api_key="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")
TWILIO_ACCOUNT_SID = "AC5d37fc46401a27a84540203820d680ca"
TWILIO_AUTH_TOKEN = "ead5696cac732121a4f448942845517c"
TWILIO_PHONE_NUMBER = "+16592518805"
JOSMOSE_WEBSITE = "https://josmoze.com"

# BASE DE CONNAISSANCES ENRICHIE V2.0
KNOWLEDGE_BASE_V2 = {
    "dangers_eau": {
        "nitrates": {
            "origine": "Agriculture intensive (78% des cas), √©levages industriels (15%), eaux us√©es urbaines (7%)",
            "dangers": "Emp√™chent le sang de transporter l'oxyg√®ne chez les b√©b√©s (syndrome du b√©b√© bleu), +18% risque cancer colorectal adultes",
            "zones_critiques": "Bretagne 68% communes, Champagne-Ardenne 52%, Beauce 45%",
            "chiffres_choc": "142 cas syndrome b√©b√© bleu recens√©s depuis 2020",
            "elimination_josmoze": "98,5% d'√©limination garantie"
        },
        "pesticides": {
            "prevalence": "5,7 pesticides diff√©rents par verre en moyenne, 200+ mol√©cules d√©tect√©es, 68% points de contr√¥le contamin√©s",
            "top_dangers": "Glyphosate 65% (Roundup), Atrazine 78% (interdit mais persistant), M√©tolachlore 52%",
            "effet_cocktail": "Personne ne sait ce qui se passe quand ces mol√©cules se m√©langent dans l'organisme",
            "zones_pires": "Champagne-Ardenne 82%, Centre-Val Loire 79%, Hauts-de-France 76%",
            "elimination_josmoze": "99,2% des 200+ mol√©cules √©limin√©es"
        },
        "chlore": {
            "paradoxe": "N√©cessaire pour d√©sinfecter mais cr√©e sous-produits canc√©rig√®nes (trihalom√©thanes)",
            "impact_sante": "D√©truit flore intestinale (-23% diversit√© en 6 mois), troubles digestifs, affaiblissement immunitaire",
            "sous_produits": "Trihalom√©thanes pr√©sents 45% r√©seaux, class√©s potentiellement canc√©rig√®nes",
            "elimination_josmoze": "99,8% suppression chlore + sous-produits"
        }
    },
    
    "solutions_comparees": {
        "carafe_filtrante": {
            "avantages": "Simple, am√©liore go√ªt chlore, prix achat 30-50‚Ç¨",
            "inconvenients": "Inefficace nitrates/pesticides, 180‚Ç¨/an filtres, nid √† bact√©ries si mal entretenue",
            "verdict": "Solution de confort, pas de sant√©"
        },
        "filtre_robinet": {
            "avantages": "Filtre chlore + certains pesticides, plus pratique que carafe",
            "inconvenients": "N'√©limine ni nitrates, ni virus, ni m√©taux lourds, efficacit√© diminue vite",
            "verdict": "Insuffisant pour protection familiale compl√®te"
        },
        "osmose_inverse": {
            "avantages": "99,9% √©limination TOUT, go√ªt parfait, √©conomique long terme (0,12‚Ç¨/L), √©cologique",
            "principe": "Membrane ultra-fine 0,0001 micron, barri√®re physique infranchissable",
            "verdict": "Seule solution compl√®te sans compromis"
        }
    },
    
    "nouveaux_produits": {
        "fontaine_animaux": {
            "prix": "49‚Ç¨",
            "description": "Fontaine eau pure pour animaux avec syst√®me filtration avanc√©",
            "avantages": "M√™me technologie que nos osmoseurs, mat√©riaux premium, garantie 2 ans"
        },
        "sac_transport": {
            "prix": "29‚Ç¨", 
            "description": "Sac transport premium pour animaux avec mini-purificateur d'air int√©gr√©",
            "avantages": "Ventilation optimis√©e, filtres anti-odeurs, compatible IATA"
        },
        "distributeur_nourriture": {
            "prix": "39‚Ç¨",
            "description": "Distributeur nourriture intelligent avec int√©gration mini-fontaine",
            "avantages": "Application d√©di√©e, syst√®me conservation herm√©tique, compatible IoT"
        }
    },
    
    "offres_commerciales": {
        "pack_famille": {
            "prix_normal": "1290‚Ç¨",
            "prix_promo": "890‚Ç¨",
            "reduction": "31%",
            "bonus": "1 produit animal offert au choix",
            "inclus": "Osmoseur 7 √©tapes, installation pro, analyse gratuite, formation, filtres 1√®re ann√©e, app IoT, garantie 5 ans"
        },
        "financement": {
            "mensualite": "37‚Ç¨/mois sur 24 mois",
            "taux": "0%",
            "comparaison": "Moins cher que l'eau en bouteille (40‚Ç¨/mois famille)"
        },
        "economies": {
            "vs_bouteille_5ans": "4800‚Ç¨ √©conomis√©s",
            "roi": "8 mois d'amortissement", 
            "ecologie": "15000 bouteilles √©vit√©es/an"
        }
    },
    
    "arguments_vente": {
        "sante": "√âlimine 99,9% contaminants (nitrates, pesticides, chlore, m√©taux, virus, bact√©ries)",
        "economie": "ROI 500% sur 10 ans, co√ªt r√©el 0,12‚Ç¨/L vs 0,25‚Ç¨/L bouteille",
        "ecologie": "Z√©ro d√©chet plastique, -87% empreinte carbone vs eau embouteill√©e",
        "simplicite": "Robinet d√©di√©, r√©servoir 12L, maintenance 1 visite/an",
        "garanties": "30j satisfait/rembours√©, garantie 5 ans totale, installation garantie"
    },
    
    "temoignages_clients": {
        "sophie_lille": "2 ans avec Josmoze. Mes enfants n'ont plus de probl√®mes digestifs. Je recommande !",
        "dr_claire_nice": "En tant que m√©decin, je salue cette qualit√© de filtration. Mes patients vont mieux.",
        "michel_bordeaux": "Installation parfaite, √©quipe pro. L'√©conomie sur l'eau en bouteille est impressionnante."
    }
}

class ConversationalAgentV2:
    def __init__(self, name: str, role: str, personality: str):
        self.name = name
        self.role = role 
        self.personality = personality
        self.twilio_client = Client(TWILIO_ACCOUNT_SID, TWILIO_AUTH_TOKEN)
        self.conversation_memory = {}
        self.knowledge_base = KNOWLEDGE_BASE_V2
        
    def get_conversation_context(self, client_phone: str) -> str:
        """R√©cup√®re le contexte de conversation pr√©c√©dent"""
        if client_phone in self.conversation_memory:
            history = self.conversation_memory[client_phone]
            context = "Historique conversation:\n"
            for msg in history[-5:]:
                timestamp = msg.get('timestamp', 'Inconnu')
                sender = msg.get('sender', 'Inconnu')
                text = msg.get('text', '')
                context += f"[{timestamp}] {sender}: {text}\n"
            return context
        return "Premi√®re conversation avec ce client."
    
    def save_message(self, client_phone: str, sender: str, message: str):
        """Sauvegarde un message dans l'historique"""
        if client_phone not in self.conversation_memory:
            self.conversation_memory[client_phone] = []
        
        self.conversation_memory[client_phone].append({
            'timestamp': datetime.now().strftime("%H:%M:%S"),
            'sender': sender,
            'text': message
        })
        
        if len(self.conversation_memory[client_phone]) > 20:
            self.conversation_memory[client_phone] = self.conversation_memory[client_phone][-20:]
    
    def detect_specific_topics(self, message: str) -> List[str]:
        """D√©tecte les sujets sp√©cifiques dans le message pour r√©ponses ultra-cibl√©es"""
        message_lower = message.lower()
        detected_topics = []
        
        # D√©tection dangers sp√©cifiques
        if any(word in message_lower for word in ["nitrate", "b√©b√©", "nourrisson", "enfant", "cancer"]):
            detected_topics.append("nitrates_danger")
        
        if any(word in message_lower for word in ["pesticide", "glyphosate", "roundup", "agricole", "chimique"]):
            detected_topics.append("pesticides_danger")
            
        if any(word in message_lower for word in ["chlore", "javel", "go√ªt", "odeur", "microbiote", "intestin"]):
            detected_topics.append("chlore_danger")
        
        # D√©tection solutions
        if any(word in message_lower for word in ["carafe", "brita", "filtre", "alternative"]):
            detected_topics.append("solutions_alternatives")
            
        if any(word in message_lower for word in ["bouteille", "plastique", "evian", "contrex"]):
            detected_topics.append("eau_bouteille")
        
        # D√©tection objections prix
        if any(word in message_lower for word in ["cher", "co√ªt", "budget", "√©conomie", "rentable"]):
            detected_topics.append("objection_prix")
        
        # D√©tection int√©r√™t animaux
        if any(word in message_lower for word in ["chien", "chat", "animal", "fontaine", "sac", "distributeur"]):
            detected_topics.append("produits_animaux")
        
        return detected_topics

    async def generate_enhanced_response(self, client_message: str, client_phone: str, client_name: str = "Client") -> str:
        """G√©n√®re une r√©ponse ultra-enrichie avec la nouvelle base de connaissances"""
        
        conversation_context = self.get_conversation_context(client_phone)
        message_lower = client_message.lower()
        
        # D√©tection d'intention (comme avant) + sujets sp√©cifiques
        intentions = {
            "prix_tarif": ["prix", "co√ªt", "tarif", "combien", "‚Ç¨", "euros", "cher", "budget"],
            "info_produit": ["info", "information", "produit", "catalogue", "voir", "d√©tails"],
            "achat_commande": ["acheter", "commander", "commande", "veux", "int√©ress√©"],
            "comparaison": ["comparai", "diff√©rence", "mieux", "quel", "choisir", "conseil"],
            "technique": ["technique", "fonctionne", "installation", "filtre", "garantie"],
            "sante_dangers": ["sant√©", "danger", "risque", "b√©b√©", "famille", "s√©curis√©"],
            "animaux": ["chien", "chat", "animal", "fontaine", "sac", "distributeur"],
            "urgence": ["urgent", "rapidement", "vite", "maintenant"],
            "h√©sitation": ["h√©site", "r√©fl√©chis", "pas s√ªr", "doute"],
            "positif": ["oui", "ok", "d'accord", "int√©resse", "parfait"],
            "n√©gatif": ["non", "pas int√©ress√©", "cher", "plus tard"]
        }
        
        # D√©tection intention principale
        detected_intention = "general"
        max_score = 0
        for intention, keywords in intentions.items():
            score = sum(1 for keyword in keywords if keyword in message_lower)
            if score > max_score:
                max_score = score
                detected_intention = intention
        
        # D√©tection sujets sp√©cifiques
        specific_topics = self.detect_specific_topics(client_message)
        
        # Construction prompt ultra-enrichi par agent
        enhanced_prompts = {
            "Thomas": {
                "sante_dangers": f"""Client pr√©occup√© par sant√©/dangers eau. Utilise donn√©es PR√âCISES:
                - 68% points contr√¥le contiennent pesticides (5,7 diff√©rents/verre)
                - Nitrates: syndrome b√©b√© bleu, 142 cas depuis 2020
                - Chlore: d√©truit microbiote (-23% en 6 mois)
                Rassure avec solution Josmoze: 99,9% √©limination. Lien {JOSMOSE_WEBSITE}. Question famille/enfants?""",
                
                "comparaison": f"""Client compare solutions. √âduque avec faits:
                - Carafe: 0% nitrates/pesticides, juste go√ªt chlore
                - Robinet: 70% pesticides mais 0% nitrates/virus
                - Osmose Josmoze: 99,9% TOUT √©limin√©
                Guide {JOSMOSE_WEBSITE}. Priorit√©: sant√© ou budget?""",
                
                "info_produit": f"""Client veut infos. Donne avantages cl√©s nouveaux:
                - Syst√®me 7 √©tapes brevet√© (vs 3-5 concurrents)
                - Remin√©ralisation intelligente (eau vivante)
                - Monitoring IoT app mobile
                Catalogue {JOSMOSE_WEBSITE}. Usage pr√©vu?""",
                
                "g√©n√©ral": f"Bonjour {client_name}! Expert qualit√© eau Josmoze. Pr√©occupation eau du robinet? Conseils {JOSMOSE_WEBSITE}. Votre situation?"
            },
            
            "Sophie": {
                "prix_tarif": f"""Client demande prix. Pr√©sente valeur:
                Pack famille 890‚Ç¨ (-31%) vs 1290‚Ç¨ normal
                37‚Ç¨/mois 0% (moins que bouteilles!)
                √âconomies 4800‚Ç¨ sur 5 ans
                Configurateur {JOSMOSE_WEBSITE}. Budget mensuel OK?""",
                
                "achat_commande": f"""Client veut acheter. Facilite:
                Parfait {client_name}! Pack famille 890‚Ç¨ tout inclus
                + produit animal OFFERT (fontaine 49‚Ç¨, sac 29‚Ç¨, distributeur 39‚Ç¨)
                Commande {JOSMOSE_WEBSITE}. Quel cadeau animal?""",
                
                "objection_prix": f"""Client trouve cher. Repositionne valeur:
                890‚Ç¨ = 37‚Ç¨/mois vs 40‚Ç¨/mois bouteilles famille
                ROI 8 mois + sant√© famille garantie
                Financement 0% {JOSMOSE_WEBSITE}. Calculons ensemble?""",
                
                "h√©sitation": f"""Client h√©site. L√®ve objections:
                Normal d'h√©siter {client_name}. 30j satisfait/rembours√©
                D√©j√† 847 familles satisfaites (4,8/5)
                Analyse gratuite {JOSMOSE_WEBSITE}. Quelle h√©sitation?""",
                
                "g√©n√©ral": f"Bonjour {client_name}! Sophie, conseill√®re Josmoze. Prot√©geons votre famille! Solutions {JOSMOSE_WEBSITE}. Besoins urgents?"
            },
            
            "Marie": {
                "technique": f"""Client question technique. Expertise rassurante:
                Membrane 0,0001 micron (technologie NASA)
                Installation 1h45 par technicien certifi√©
                Maintenance 1 visite/an incluse
                Guides {JOSMOSE_WEBSITE}. Logement type?""",
                
                "service": f"""Client probl√®me/service. Accompagnement:
                {client_name}, Marie du service Josmoze
                R√©solvons ensemble rapidement
                Support 7j/7 garantie 5 ans
                Assistance {JOSMOSE_WEBSITE}. Pr√©cisez probl√®me?""",
                
                "g√©n√©ral": f"Bonjour {client_name}! Marie, relation client Josmoze. Accompagnement personnalis√© garanti! Aide {JOSMOSE_WEBSITE}. Comment aider?"
            },
            
            "Julien": {
                "negatif": f"""Client n√©gatif/r√©cup√©ration. Derni√®re chance:
                Compris {client_name}. Offre exceptionnelle derni√®res heures:
                Pack 890‚Ç¨ + animal OFFERT + financement 0%
                Stock limit√© 8 osmoseurs
                Urgence {JOSMOSE_WEBSITE}. Derni√®re opportunit√©?""",
                
                "h√©sitation": f"""Client h√©site. Urgence douce:
                {client_name}, pack famille -31% se termine ce soir
                Plus que 8 osmoseurs disponibles
                R√©servation {JOSMOSE_WEBSITE}. S√©curisez maintenant?""",
                
                "g√©n√©ral": f"{client_name}, Julien r√©cup√©ration Josmoze. Offre expire bient√¥t! Opportunit√© {JOSMOSE_WEBSITE}. Derni√®re chance?"
            },
            
            "Caroline": {
                "technique": f"""Client technique. Donn√©es pr√©cises:
                Tests laboratoire Suez: 98,8% nitrates √©limin√©s
                Certification NSF International (standard mondial)
                Membrane TFC 3 couches ultra-fines
                Documentation {JOSMOSE_WEBSITE}. Param√®tres sp√©cifiques?""",
                
                "comparaison": f"""Client compare. Analyse objective:
                Osmose 99,9% vs Carafe 30% vs Robinet 70%
                Co√ªt r√©el 0,12‚Ç¨/L vs bouteille 0,25‚Ç¨/L
                ROI 500% sur 10 ans prouv√©
                Comparatifs {JOSMOSE_WEBSITE}. Crit√®res d√©cision?""",
                
                "g√©n√©ral": f"{client_name}, Caroline analyste Josmoze. Donn√©es objectives disponibles! Insights {JOSMOSE_WEBSITE}. Quels param√®tres?"
            }
        }
        
        # Gestion sujets sp√©cifiques avec donn√©es enrichies
        specific_responses = {
            "nitrates_danger": f"Nitrates dangereux: syndrome b√©b√© bleu (142 cas depuis 2020), +18% cancer. Bretagne 68% communes touch√©es. Josmoze √©limine 98,5%.",
            "pesticides_danger": f"Pesticides: 5,7 diff√©rents/verre, Glyphosate 65% √©chantillons. Effet cocktail inconnu. Josmoze √©limine 99,2% des 200+ mol√©cules.",
            "chlore_danger": f"Chlore d√©truit microbiote (-23% en 6 mois), cr√©e sous-produits canc√©rig√®nes. Josmoze supprime 99,8% chlore + sous-produits.",
            "solutions_alternatives": f"Carafe: 0% nitrates/pesticides. Robinet: 70% pesticides mais 0% nitrates. Seule osmose = 99,9% TOUT.",
            "eau_bouteille": f"Bouteilles: microplastiques + 40‚Ç¨/mois famille. Osmose 37‚Ç¨/mois + 0 d√©chet. √âconomies 4800‚Ç¨/5 ans.",
            "produits_animaux": f"Nouveaut√©! Fontaine animaux 49‚Ç¨, sac transport 29‚Ç¨, distributeur 39‚Ç¨. 1 OFFERT avec osmoseur.",
            "objection_prix": f"890‚Ç¨ = 37‚Ç¨/mois vs 40‚Ç¨/mois bouteilles. ROI 8 mois. Sant√© famille: sans prix!"
        }
        
        # S√©lection du template appropri√©
        agent_templates = enhanced_prompts.get(self.name, enhanced_prompts["Thomas"])
        base_template = agent_templates.get(detected_intention, agent_templates.get("g√©n√©ral", ""))
        
        # Enrichissement avec sujets sp√©cifiques
        topic_enrichment = ""
        for topic in specific_topics[:2]:  # Max 2 sujets pour √©viter surcharge
            if topic in specific_responses:
                topic_enrichment += f"\nSUJET SP√âCIFIQUE {topic}: {specific_responses[topic]}"
        
        # Prompt final ultra-enrichi
        enhanced_directive = f"""
        Tu es {self.name}, {self.role} chez Josmoze (purificateurs d'eau par osmose inverse).
        Personnalit√©: {self.personality}
        
        CLIENT: {client_name}
        INTENTION: {detected_intention}
        SUJETS SP√âCIFIQUES: {', '.join(specific_topics) if specific_topics else 'Aucun'}
        MESSAGE: "{client_message}"
        
        CONTEXTE CONVERSATION:
        {conversation_context}
        
        TEMPLATE PERSONNALIS√â AGENT:
        {base_template}
        
        ENRICHISSEMENT SUJETS:
        {topic_enrichment}
        
        BASE CONNAISSANCES V2 (utilise si pertinent):
        - Dangers eau: nitrates (syndrome b√©b√© bleu), pesticides (5,7/verre), chlore (microbiote -23%)
        - Solutions: carafe inefficace, robinet limit√©, osmose 99,9% tout
        - Josmoze: 7 √©tapes, 890‚Ç¨, garantie 5 ans, √©conomies 4800‚Ç¨/5ans
        - Nouveaux produits animaux: fontaine 49‚Ç¨, sac 29‚Ç¨, distributeur 39‚Ç¨
        
        R√àGLES SMS OPTIMALES:
        1. Maximum 160 caract√®res SMS
        2. Inclure {JOSMOSE_WEBSITE} si intention commerciale
        3. Question engageante
        4. Ton personnalis√© agent
        5. Action concr√®te
        6. Donn√©es pr√©cises si technique
        7. Maximum 1-2 √©mojis
        8. Personnalisation nom client
        
        G√©n√®re la r√©ponse SMS PARFAITE enrichie des nouvelles connaissances.
        """
        
        try:
            response = client.chat.completions.create(
                model="gpt-4o-mini",
                messages=[
                    {"role": "system", "content": enhanced_directive},
                    {"role": "user", "content": f"G√©n√®re le SMS enrichi pour {client_name}"}
                ],
                max_tokens=120,
                temperature=0.7
            )
            
            enhanced_response = response.choices[0].message.content.strip()
            
            # Optimisation finale (comme avant mais avec enrichissements)
            critical_intentions = ["prix_tarif", "info_produit", "achat_commande", "comparaison", "technique", "sante_dangers"]
            
            if len(enhanced_response) > 160:
                parts = enhanced_response.split(' ')
                compressed = ""
                for part in parts:
                    if len(compressed + " " + part) <= 155:
                        compressed = compressed + " " + part if compressed else part
                    else:
                        break
                        
                if JOSMOSE_WEBSITE not in compressed and detected_intention in critical_intentions:
                    url_space = len(JOSMOSE_WEBSITE) + 1
                    available_space = 155 - url_space
                    if available_space > 20:
                        text_part = enhanced_response[:available_space].rsplit(' ', 1)[0]
                        enhanced_response = f"{text_part} {JOSMOSE_WEBSITE}"
                    else:
                        enhanced_response = compressed
                else:
                    enhanced_response = compressed
                    
            if detected_intention in critical_intentions and JOSMOSE_WEBSITE not in enhanced_response:
                if len(enhanced_response) < 120:
                    enhanced_response += f" {JOSMOSE_WEBSITE}"
                else:
                    available = 155 - len(JOSMOSE_WEBSITE)
                    text_part = enhanced_response[:available].rsplit(' ', 1)[0]
                    enhanced_response = f"{text_part} {JOSMOSE_WEBSITE}"
            
            # Sauvegarde enrichie
            self.save_message(client_phone, f"Client ({client_name})", client_message)
            self.save_message(client_phone, f"{self.name} [V2-{detected_intention}]", enhanced_response)
            
            return enhanced_response
            
        except Exception as e:
            print(f"‚ùå Erreur IA V2: {str(e)}")
            
            # R√©ponses de secours enrichies
            enhanced_emergency = {
                "prix_tarif": f"{client_name}, pack famille 890‚Ç¨ vs 1290‚Ç¨ (-31%). 37‚Ç¨/mois 0%. D√©tails {JOSMOSE_WEBSITE}. Budget OK?",
                "sante_dangers": f"{client_name}, 68% eaux contiennent pesticides. Josmoze √©limine 99,9%. S√©curit√© {JOSMOSE_WEBSITE}. Enfants?",
                "info_produit": f"{client_name}, osmose 7 √©tapes + app IoT. Catalogue {JOSMOSE_WEBSITE}. Usage pr√©vu?",
                "achat_commande": f"Parfait {client_name}! Pack 890‚Ç¨ + animal offert. Commande {JOSMOSE_WEBSITE}. Quel cadeau?",
                "animaux": f"{client_name}, nouveaut√©! Fontaine/sac/distributeur animaux. 1 offert avec osmoseur {JOSMOSE_WEBSITE}. Animaux?",
                "g√©n√©ral": f"Merci {client_name}! Expert eau pure Josmoze. Solutions {JOSMOSE_WEBSITE}. Besoins?"
            }
            
            return enhanced_emergency.get(detected_intention, f"Merci {client_name}! Solutions eau pure: {JOSMOSE_WEBSITE}")

    async def send_enhanced_sms(self, to_number: str, client_message: str, client_name: str = "Client") -> bool:
        """Envoie SMS avec r√©ponse enrichie V2"""
        try:
            response = await self.generate_enhanced_response(client_message, to_number, client_name)
            
            sms = self.twilio_client.messages.create(
                body=response,
                from_=TWILIO_PHONE_NUMBER,
                to=to_number
            )
            
            print(f"‚úÖ {self.name} V2 ‚Üí SMS enrichi: {response}")
            print(f"üìã SID: {sms.sid}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå Erreur envoi SMS V2: {str(e)}")
            return False

# Agents conversationnels V2 enrichis
conversational_agents_v2 = {
    "thomas": ConversationalAgentV2(
        name="Thomas",
        role="expert qualit√© eau et dangers sanitaires",
        personality="Empathique, √©ducateur, expert nitrates/pesticides/chlore, protecteur familles"
    ),
    
    "sophie": ConversationalAgentV2(
        name="Sophie", 
        role="conseill√®re commerciale sp√©cialis√©e osmose inverse",
        personality="Professionnelle, ROI-orient√©e, experte objections prix, facilitatrice d√©cisions"
    ),
    
    "marie": ConversationalAgentV2(
        name="Marie",
        role="sp√©cialiste relation client et support technique",
        personality="Chaleureuse, technicienne confirm√©e, garanties rassurantes, fid√©lisatrice"
    ),
    
    "julien": ConversationalAgentV2(
        name="Julien", 
        role="expert r√©cup√©ration et offres exceptionnelles",
        personality="Motivateur, urgence ma√Ætris√©e, facilitateur derni√®re chance, cr√©ateur opportunit√©s"
    ),
    
    "caroline": ConversationalAgentV2(
        name="Caroline",
        role="analyste performance eau et conseils data-driven", 
        personality="Scientifique, donn√©es pr√©cises, certifications, preuves laboratoire"
    )
}

def detect_enhanced_agent(message: str) -> str:
    """D√©tection agent am√©lior√©e avec nouveaux crit√®res"""
    
    message_lower = message.lower()
    
    # Mots-cl√©s enrichis V2
    enhanced_keywords = {
        "thomas": [
            "sant√©", "danger", "b√©b√©", "enfant", "famille", "s√©curit√©", "risque",
            "nitrate", "pesticide", "chlore", "qualit√©", "pure", "conseil", "info"
        ],
        "sophie": [
            "prix", "co√ªt", "acheter", "commander", "budget", "√©conomie", "rentable",
            "offre", "promo", "pack", "financement", "int√©ress√©", "vendre"
        ],
        "marie": [
            "installation", "technique", "garantie", "service", "support", "aide",
            "probl√®me", "maintenance", "assistance", "accompagnement"
        ],
        "julien": [
            "h√©site", "r√©fl√©chir", "cher", "plus tard", "abandonn√©", "urgent",
            "derni√®re", "rapide", "maintenant", "d√©cision", "opportunit√©"
        ],
        "caroline": [
            "comparaison", "test", "analyse", "√©tude", "donn√©es", "laboratoire",
            "certification", "performance", "technique", "scientifique"
        ]
    }
    
    # Score enrichi par agent
    scores = {}
    for agent, words in enhanced_keywords.items():
        scores[agent] = sum(1 for word in words if word in message_lower)
    
    # Agent avec meilleur score
    best_agent = max(scores.items(), key=lambda x: x[1])
    
    # Si √©galit√© ou pas de match, Thomas par d√©faut (expert g√©n√©ral)
    return best_agent[0] if best_agent[1] > 0 else "thomas"

# Tests enrichis avec nouveau contenu
async def test_enhanced_system():
    """Test du syst√®me V2 enrichi"""
    
    print("ü§ñ TEST SYST√àME CONVERSATIONNEL V2.0 ENRICHI")
    print("=" * 55)
    
    client_phone = "+15068893760"  
    client_name = "Madame Dubois"
    
    # Conversations de test enrichies
    enhanced_conversations = [
        ("Bonjour, l'eau du robinet est-elle dangereuse pour mon b√©b√© ?", "thomas"),
        ("Vos prix sont √©lev√©s, combien exactement ?", "sophie"), 
        ("Quelle est la diff√©rence avec une carafe Brita ?", "caroline"),
        ("J'h√©site, c'est un gros investissement...", "julien"),
        ("Avez-vous des produits pour les animaux ?", "thomas")
    ]
    
    print(f"üß™ Test conversation V2 enrichie avec {client_name}")
    
    for i, (message, preferred_agent) in enumerate(enhanced_conversations, 1):
        print(f"\n--- √âchange V2 {i} ---")
        print(f"üë§ {client_name}: {message}")
        
        # D√©tection automatique enrichie
        detected_agent = detect_enhanced_agent(message)
        agent_name = preferred_agent or detected_agent
        agent = conversational_agents_v2[agent_name]
        
        print(f"ü§ñ Agent V2 s√©lectionn√©: {agent.name}")
        
        # R√©ponse enrichie
        success = await agent.send_enhanced_sms(client_phone, message, client_name)
        
        if success:
            print(f"‚úÖ SMS V2 enrichi envoy√©")
        else:
            print(f"‚ùå √âchec envoi V2")
        
        await asyncio.sleep(3)
    
    print(f"\nüåä Test V2 termin√© ! Syst√®me enrichi avec nouveau contenu actif.")

if __name__ == "__main__":
    # Test syst√®me V2 enrichi
    asyncio.run(test_enhanced_system())