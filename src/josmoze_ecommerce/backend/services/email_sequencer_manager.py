"""
Email Sequencer Osmoseur - Syst√®me de marketing automation GDPR-compliant
S√©quence automatique de 3 emails pour prospects avec respect liste suppression
"""

import os
import uuid
import smtplib
import asyncio
from datetime import datetime, timezone, timedelta
from typing import List, Dict, Any, Optional
from email.mime.text import MIMEText
from email.mime.multipart import MIMEMultipart
from email.mime.base import MIMEBase
from jinja2 import Template
import logging

class EmailSequencerManager:
    def __init__(self, db, suppression_manager):
        self.db = db
        self.suppression_manager = suppression_manager
        self.prospects_collection = db.prospects
        self.sequences_collection = db.email_sequences
        self.metrics_collection = db.email_metrics
        self.gdpr_journal = db.gdpr_journal
        
        # Configuration SMTP
        self.smtp_host = os.environ.get('SMTP_HOST', 'smtp.gmail.com')
        self.smtp_port = int(os.environ.get('SMTP_PORT', '587'))
        self.smtp_username = os.environ.get('SMTP_USERNAME', 'contact@josmoze.com')
        self.smtp_password = os.environ.get('SMTP_PASSWORD', '')
        self.from_name = "Josmoze"
        self.from_email = "contact@josmoze.com"
        self.base_url = "https://www.josmoze.com"
        
        # Templates d'emails - VERSION V2 OPTIMISEE avec nouveau contenu valide
        self.email_templates = {
            "email1": {
                "subject": "üö® Sarah, saviez-vous ce que contient VRAIMENT votre eau du robinet ?",
                "delay_days": 0,
                "utm_content": "email1_sensibilisation",
                "template": """
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ subject }}</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
        .content { background: white; padding: 30px; border: 1px solid #e0e0e0; }
        .cta-button { display: inline-block; background: #dc3545; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; margin: 20px 0; }
        .danger-alert { background: #f8d7da; border-left: 4px solid #dc3545; padding: 20px; margin: 20px 0; }
        .chiffres-choc { background: #fff3cd; border: 1px solid #ffeaa7; padding: 20px; margin: 20px 0; border-radius: 8px; }
        .footer { background: #f8f9fa; padding: 20px; text-align: center; font-size: 12px; color: #666; border-radius: 0 0 10px 10px; }
        @media (max-width: 600px) { body { padding: 10px; } .header, .content { padding: 20px; } }
    </style>
</head>
<body>
    <div class="header">
        <h1>üö® JOSMOZE.COM</h1>
        <h2>Alerte Eau du Robinet</h2>
    </div>
    
    <div class="content">
        <p>Bonjour {{ first_name or 'Cher lecteur' }},</p>
        
        <p><strong>Vous buvez de l'eau du robinet en toute confiance ?</strong></p>
        
        <p>Moi aussi, jusqu'√† ce que je d√©couvre les r√©sultats de la derni√®re √©tude nationale sur la qualit√© de l'eau en France...</p>
        
        <div class="chiffres-choc">
            <h3>üîç Les chiffres qui font froid dans le dos :</h3>
            <ul>
                <li>‚Ä¢ <strong>68% des points de contr√¥le</strong> contiennent des pesticides</li>
                <li>‚Ä¢ <strong>Plus de 200 mol√©cules chimiques</strong> d√©tect√©es dans l'eau du robinet</li>
                <li>‚Ä¢ <strong>15% des communes</strong> d√©passent les seuils de nitrates recommand√©s</li>
                <li>‚Ä¢ <strong>142 cas de syndrome du b√©b√© bleu</strong> recens√©s depuis 2020</li>
            </ul>
            <p><em>Et ce sont les chiffres OFFICIELS...</em></p>
        </div>
        
        <div class="danger-alert">
            <h3>‚ö†Ô∏è Votre famille boit peut-√™tre un cocktail chimique quotidien sans le savoir</h3>
            <p><strong>Nitrates, pesticides, chlore, m√©taux lourds</strong> : Ces substances s'accumulent dans votre organisme et celui de vos enfants jour apr√®s jour.</p>
        </div>
        
        <p><strong>Le plus troublant ?</strong> La r√©glementation teste chaque substance individuellement, mais <strong>personne ne conna√Æt l'effet de ce m√©lange</strong> sur votre sant√© √† long terme.</p>
        
        <div style="text-align: center;">
            <a href="{{ cta_link }}" class="cta-button">üîç D√©couvrir toute la v√©rit√©</a>
        </div>
        
        <div class="chiffres-choc">
            <h3>üé• T√©moignage choc du Dr. Christine Marseille :</h3>
            <p><em>"En 15 ans d'exercice en Bretagne, j'ai vu exploser les troubles digestifs inexpliqu√©s. Quand mes patients passent √† l'eau filtr√©e, 70% voient leurs sympt√¥mes s'am√©liorer en 2 mois."</em></p>
        </div>
        
        <p><strong>{{ first_name or 'Cher lecteur' }}, votre eau est-elle vraiment s√ªre ?</strong></p>
        
        <div style="text-align: center; margin: 30px 0;">
            <a href="{{ cta_link }}" class="cta-button">üìû ANALYSE GRATUITE DE VOTRE EAU</a>
        </div>
        
        <p><small>Nos experts se d√©placent chez vous et testent 15 param√®tres cruciaux</small></p>
        
        <p>Vous m√©ritez de savoir ce que vous buvez.</p>
        
        <p>Cordialement,<br>
        <strong>Pierre Moreau</strong><br>
        <em>Expert Traitement Eau - Josmoze</em></p>
        
        <p><strong>P.S.</strong> : Cette analyse est 100% gratuite et sans engagement. Mais les cr√©neaux disponibles partent vite...</p>
    </div>
    
    <div class="footer">
        <p>Josmoze.com - Sp√©cialiste europ√©en des syst√®mes d'osmose inverse</p>
        <p>Vos donn√©es sont prot√©g√©es selon le RGPD</p>
        <p><a href="{{ unsubscribe_link }}" style="color: #666;">Se d√©sinscrire</a></p>
    </div>
</body>
</html>
                """
            },
            "email2": {
                "subject": "Sarah, ces 3 substances dans votre eau inqui√®tent les m√©decins...",
                "delay_days": 4,
                "utm_content": "email2_education",
                "template": """
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ subject }}</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #28a745 0%, #20c997 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
        .content { background: white; padding: 30px; border: 1px solid #e0e0e0; }
        .cta-button { display: inline-block; background: #28a745; color: white; padding: 15px 30px; text-decoration: none; border-radius: 5px; font-weight: bold; margin: 20px 0; }
        .menace-box { background: #f8d7da; border-left: 4px solid #dc3545; padding: 20px; margin: 20px 0; }
        .zones-box { background: #d4edda; border-left: 4px solid #28a745; padding: 15px; margin: 15px 0; }
        .solutions-box { background: #e2e3e5; border-left: 4px solid #6c757d; padding: 15px; margin: 15px 0; }
        .footer { background: #f8f9fa; padding: 20px; text-align: center; font-size: 12px; color: #666; border-radius: 0 0 10px 10px; }
        @media (max-width: 600px) { body { padding: 10px; } .header, .content { padding: 20px; } }
    </style>
</head>
<body>
    <div class="header">
        <h1>üß™ JOSMOZE.COM</h1>
        <h2>Les 3 Menaces Principales</h2>
    </div>
    
    <div class="content">
        <p>Bonjour {{ first_name or 'Cher lecteur' }},</p>
        
        <p>Suite √† mon premier message sur les dangers cach√©s de l'eau du robinet, vous avez √©t√© <strong>nombreux √† me poser cette question :</strong></p>
        
        <p><em>"Concr√®tement, quelles sont les substances les plus dangereuses dans mon eau ?"</em></p>
        
        <p><strong>Excellente question.</strong> Laissez-moi vous parler des <strong>3 menaces principales</strong> que tous les parents devraient conna√Ætre :</p>
        
        <div class="menace-box">
            <h3>üö® MENACE #1 : LES NITRATES</h3>
            <p><strong>D'o√π viennent-ils ?</strong> Agriculture intensive (78% des cas)</p>
            <p><strong>Pourquoi c'est grave ?</strong></p>
            <ul>
                <li>‚Ä¢ <strong>Syndrome du b√©b√© bleu</strong> chez les nourrissons</li>
                <li>‚Ä¢ <strong>+18% risque cancer colorectal</strong> chez l'adulte</li>
                <li>‚Ä¢ <strong>142 cas recens√©s</strong> en France depuis 2020</li>
            </ul>
            <p><strong>Zones les plus touch√©es :</strong> Bretagne (68% des communes), Champagne-Ardenne (52%), Beauce (45%)</p>
        </div>
        
        <div class="menace-box">
            <h3>üåæ MENACE #2 : LES PESTICIDES</h3>
            <p><strong>Le chiffre choc :</strong> <strong>5,7 pesticides diff√©rents</strong> dans chaque verre d'eau en moyenne</p>
            <p><strong>Les plus dangereux :</strong></p>
            <ul>
                <li>‚Ä¢ <strong>Atrazine</strong> (78% de pr√©sence) : Perturbateur endocrinien</li>
                <li>‚Ä¢ <strong>Glyphosate</strong> (65% de pr√©sence) : Canc√©rig√®ne probable</li>
                <li>‚Ä¢ <strong>M√©tolachlore</strong> (52% de pr√©sence) : Toxique h√©patique</li>
            </ul>
            <p><strong>L'effet cocktail :</strong> Personne ne sait ce qui se passe quand ces mol√©cules se m√©langent dans votre organisme...</p>
        </div>
        
        <div class="menace-box">
            <h3>üíß MENACE #3 : LE CHLORE</h3>
            <p><strong>Le paradoxe :</strong> N√©cessaire pour d√©sinfecter, mais cr√©e des sous-produits canc√©rig√®nes</p>
            <p><strong>Les sous-produits toxiques :</strong></p>
            <ul>
                <li>‚Ä¢ <strong>Trihalom√©thanes</strong> : Pr√©sents dans 45% des r√©seaux</li>
                <li>‚Ä¢ <strong>Impact sur votre microbiote</strong> : -23% de diversit√© microbienne apr√®s 6 mois</li>
            </ul>
        </div>
        
        <div style="text-align: center;">
            <a href="{{ cta_link }}" class="cta-button">üìñ Analyse d√©taill√©e + Solutions</a>
        </div>
        
        <div class="zones-box">
            <h3>üó∫Ô∏è Votre R√©gion est-elle Concern√©e ?</h3>
            <p><strong>üî¥ ZONES ROUGES</strong> (Risque √âlev√©) : Bretagne, Bassin parisien, Nord-Pas-de-Calais</p>
            <p><strong>üü° ZONES ORANGE</strong> (Risque Mod√©r√©) : Vall√©e du Rh√¥ne, Aquitaine viticole, Est industriel</p>
            <p><strong>üü¢ ZONES VERTES</strong> (Risque Faible) : Haute montagne, zones rurales prot√©g√©es</p>
            <p><strong>M√™me en zone verte,</strong> le chlore et ses sous-produits restent pr√©sents partout en France.</p>
        </div>
        
        <div class="solutions-box">
            <h3>üí° Ce qui NE Marche PAS :</h3>
            <p>‚ùå <strong>Faire bouillir l'eau</strong> : Concentre les nitrates et pesticides<br>
            ‚ùå <strong>Carafes basiques</strong> : Inefficaces sur nitrates/pesticides<br>
            ‚ùå <strong>Eau en bouteille</strong> : Microplastiques + co√ªt environnemental</p>
            
            <h3>‚úÖ Ce qui Marche VRAIMENT :</h3>
            <p><strong>1. Osmose Inverse</strong> : 99,9% d'√©limination de TOUT<br>
            <strong>2. Charbon Actif +</strong> : 85-95% selon substances<br>
            <strong>3. Distillation</strong> : 99,9% mais √©nergivore</p>
        </div>
        
        <div style="text-align: center;">
            <a href="{{ cta_link }}" class="cta-button">üìû CONSEIL PERSONNALIS√â GRATUIT</a>
        </div>
        <p style="text-align: center;"><small>Nos sp√©cialistes analysent votre situation et vous proposent LA solution adapt√©e</small></p>
        
        <p><strong>{{ first_name or 'Cher lecteur' }}, votre famille m√©rite une eau parfaitement pure.</strong></p>
        
        <p>Dans 3 jours, je vous d√©voilerai <strong>la solution que 95% de nos clients choisissent</strong> et pourquoi elle surpasse toutes les autres.</p>
        
        <p>√Ä tr√®s bient√¥t,</p>
        
        <p><strong>Pierre Moreau</strong><br>
        <em>Expert Traitement Eau - Josmoze</em></p>
        
        <p><strong>P.S.</strong> : Vous avez des questions sp√©cifiques sur votre eau ? <strong>R√©pondez directement √† cet email</strong>, je vous r√©ponds personnellement sous 24h.</p>
    </div>
    
    <div class="footer">
        <p>Josmoze.com - Sp√©cialiste europ√©en des syst√®mes d'osmose inverse</p>
        <p><a href="{{ unsubscribe_link }}" style="color: #666;">Se d√©sinscrire</a></p>
    </div>
</body>
</html>
                """
            },
            "email3": {
                "subject": "üéÅ Sarah, votre offre famille exclusive (48h seulement)",
                "delay_days": 7,
                "utm_content": "email3_offre_commerciale",
                "template": """
<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{ subject }}</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif; line-height: 1.6; color: #333; max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: linear-gradient(135deg, #6f42c1 0%, #007bff 100%); color: white; padding: 30px; text-align: center; border-radius: 10px 10px 0 0; }
        .content { background: white; padding: 30px; border: 1px solid #e0e0e0; }
        .cta-button { display: inline-block; background: #dc3545; color: white; padding: 18px 35px; text-decoration: none; border-radius: 5px; font-weight: bold; margin: 20px 0; font-size: 18px; }
        .urgency { background: #f8d7da; border: 1px solid #f5c6cb; padding: 20px; margin: 20px 0; border-radius: 8px; text-align: center; }
        .pack-offer { background: #d4edda; border: 1px solid #c3e6cb; padding: 25px; margin: 20px 0; border-radius: 8px; }
        .bonus-box { background: #fff3cd; border: 1px solid #ffeaa7; padding: 20px; margin: 20px 0; border-radius: 8px; }
        .temoignages { background: #e2e3e5; border-left: 4px solid #6c757d; padding: 15px; margin: 15px 0; }
        .garanties { background: #cce5ff; border: 1px solid #99d3ff; padding: 20px; margin: 20px 0; border-radius: 8px; }
        .footer { background: #f8f9fa; padding: 20px; text-align: center; font-size: 12px; color: #666; border-radius: 0 0 10px 10px; }
        @media (max-width: 600px) { body { padding: 10px; } .header, .content { padding: 20px; } }
    </style>
</head>
<body>
    <div class="header">
        <h1>üéÅ JOSMOZE.COM</h1>
        <h2>Offre Famille Exclusive</h2>
    </div>
    
    <div class="content">
        <p>Bonjour {{ first_name or 'Cher lecteur' }},</p>
        
        <p>Vous avez lu mes deux premiers messages sur <strong>les dangers de l'eau du robinet</strong> et <strong>les 3 substances pr√©occupantes</strong> (nitrates, pesticides, chlore).</p>
        
        <p>Maintenant, parlons <strong>solutions.</strong></p>
        
        <p><strong>Apr√®s 15 ans d'expertise</strong> et l'analyse de milliers d'eaux fran√ßaises, <strong>UNE technologie domine toutes les autres :</strong></p>
        
        <div class="urgency">
            <h2>üö® OFFRE FAMILLE EXCLUSIVE - 48H SEULEMENT</h2>
            <p><strong>Plus que 48h</strong> pour profiter de cette offre exclusive</p>
        </div>
        
        <div class="pack-offer">
            <h3>üéÅ PACK FAMILLE INT√âGRAL</h3>
            <p><strong>üèÜ OSMOSEUR 7 √âTAPES + INSTALLATION + GARANTIES :</strong></p>
            <p style="font-size: 24px; text-align: center;">
                <del>1 290‚Ç¨</del> ‚Üí <strong style="color: #dc3545;">890‚Ç¨</strong> <em>(-31% Exclusif)</em>
            </p>
            
            <div class="bonus-box">
                <h4>üéÅ BONUS SP√âCIAL NOUVEAUT√â :</h4>
                <p><strong>Choisissez 1 produit OFFERT</strong> pour vos animaux :</p>
                <ul>
                    <li>‚Ä¢ <strong>üêæ Fontaine Eau Pure Animaux</strong> <em>(Valeur 49‚Ç¨)</em></li>
                    <li>‚Ä¢ <strong>üëú Sac Transport Premium</strong> <em>(Valeur 29‚Ç¨)</em></li>
                    <li>‚Ä¢ <strong>üçΩÔ∏è Distributeur Nourriture Intelligent</strong> <em>(Valeur 39‚Ç¨)</em></li>
                </ul>
            </div>
            
            <p style="text-align: center; font-size: 18px;">
                <strong>üí∞ VALEUR TOTALE : 1 378‚Ç¨</strong><br>
                <strong style="color: #dc3545; font-size: 22px;">‚Üí VOTRE PRIX : 890‚Ç¨</strong>
            </p>
        </div>
        
        <div class="pack-offer">
            <h3>‚úÖ TOUT INCLUS - AUCUN FRAIS CACH√â :</h3>
            <ul>
                <li>‚úÖ <strong>Osmoseur 7 √©tapes</strong> (Technologie NASA)</li>
                <li>‚úÖ <strong>Installation professionnelle</strong> (Technicien certifi√©)</li>
                <li>‚úÖ <strong>Analyse eau gratuite</strong> (15 param√®tres)</li>
                <li>‚úÖ <strong>Formation famille</strong> (1h avec expert)</li>
                <li>‚úÖ <strong>Kit filtres 1√®re ann√©e</strong> (150‚Ç¨ √©conomis√©s)</li>
                <li>‚úÖ <strong>App mobile</strong> IoT (Monitoring qualit√©)</li>
                <li>‚úÖ <strong>Garantie 5 ans</strong> (Pi√®ces + main d'≈ìuvre)</li>
                <li>‚úÖ <strong>Produit animal OFFERT</strong> (Au choix)</li>
            </ul>
            
            <div style="text-align: center; margin: 25px 0;">
                <p><strong>üí≥ FINANCEMENT 0% - 24 MOIS</strong></p>
                <p style="font-size: 20px; color: #28a745;"><strong>37‚Ç¨/mois</strong> <em>sans frais - sans apport</em></p>
                <p><strong>Moins cher que votre eau en bouteille actuelle !</strong></p>
            </div>
        </div>
        
        <div class="temoignages">
            <h3>‚≠ê T√©moignages Clients V√©rifi√©s</h3>
            <p><strong>Sophie M. - Lille</strong> ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê<br>
            <em>"2 ans avec l'osmoseur Josmoze. Mes enfants n'ont plus de probl√®mes digestifs et le go√ªt de l'eau est incroyable. Je recommande !"</em></p>
            <p><strong>Dr. Claire L. - Nice</strong> ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê<br>
            <em>"En tant que m√©decin, je ne peux que saluer la qualit√© de filtration. Mes patients avec osmoseur Josmoze vont mieux."</em></p>
            <p><strong>üìä Note Moyenne : 4,8/5</strong> <em>(847 avis v√©rifi√©s)</em></p>
        </div>
        
        <div class="urgency">
            <h3>‚ö†Ô∏è ATTENTION : STOCK LIMIT√â</h3>
            <p>‚è∞ <strong>Plus que 48h</strong> pour profiter de cette offre exclusive</p>
            <p>üì¶ <strong>Seulement 12 osmoseurs</strong> disponibles ce mois-ci</p>
            <p>üéÅ <strong>Produits animaux</strong> : Stocks limit√©es nouveaut√©</p>
        </div>
        
        <div style="text-align: center;">
            <a href="{{ cta_link }}" class="cta-button">üöÄ JE COMMANDE MAINTENANT</a>
        </div>
        
        <div class="garanties">
            <h3>üèÜ Garantie Josmoze : Votre Tranquillit√©</h3>
            <p>‚úÖ <strong>Satisfait ou rembours√© 30 jours</strong><br>
            ‚úÖ <strong>Installation garantie 5 ans</strong><br>
            ‚úÖ <strong>Qualit√© eau certifi√©e √† vie</strong><br>
            ‚úÖ <strong>Service client 7j/7</strong></p>
        </div>
        
        <p><strong>{{ first_name or 'Cher lecteur' }}, votre famille m√©rite une eau parfaitement pure.</strong></p>
        
        <p><strong>Cette offre exclusive expire dans 48h.</strong> Apr√®s, vous paierez le prix normal (1 290‚Ç¨) et les produits animaux ne seront plus offerts.</p>
        
        <div style="text-align: center; margin: 30px 0;">
            <a href="{{ cta_link }}" class="cta-button">üî• NE LAISSEZ PAS PASSER CETTE OPPORTUNIT√â</a>
        </div>
        
        <p>Votre sant√© n'a pas de prix, mais une eau pure peut avoir un co√ªt abordable.</p>
        
        <p><strong>√Ä tr√®s bient√¥t dans la famille Josmoze !</strong></p>
        
        <p><strong>Pierre Moreau</strong><br>
        <em>Expert Traitement Eau - Josmoze</em></p>
        
        <p><strong>P.S.</strong> : Vous h√©sitez encore ? <strong>R√©pondez √† cet email</strong> avec vos questions, je vous r√©ponds personnellement sous 2h. Ou <strong>appelez-moi directement au 06 12 34 56 78</strong>.</p>
    </div>
    
    <div class="footer">
        <p>Josmoze.com - Sp√©cialiste europ√©en des syst√®mes d'osmose inverse</p>
        <p><a href="{{ unsubscribe_link }}" style="color: #666;">Se d√©sinscrire</a></p>
    </div>
</body>
</html>
                """
            }
        }
    
    async def create_indexes(self):
        """Cr√©er les index pour optimiser les performances"""
        try:
            # Index pour les s√©quences
            await self.sequences_collection.create_index([("prospect_email", 1)])
            await self.sequences_collection.create_index([("sequence_id", 1)])
            await self.sequences_collection.create_index([("step", 1)])
            await self.sequences_collection.create_index([("scheduled_at", 1)])
            await self.sequences_collection.create_index([("status", 1)])
            
            # Index pour les m√©triques
            await self.metrics_collection.create_index([("sequence_id", 1)])
            await self.metrics_collection.create_index([("prospect_email", 1)])
            await self.metrics_collection.create_index([("step", 1)])
            await self.metrics_collection.create_index([("event_type", 1)])
            await self.metrics_collection.create_index([("created_at", -1)])
            
            print("‚úÖ Index email_sequences et email_metrics cr√©√©s")
            
        except Exception as e:
            print(f"‚ö†Ô∏è Erreur lors de la cr√©ation des index: {e}")
    
    async def start_email_sequence(self, test_mode: bool = False, test_emails: List[str] = None, agent_email: str = "system") -> Dict[str, Any]:
        """D√©marrer une nouvelle s√©quence d'emails"""
        try:
            # G√©n√©rer un ID unique pour cette s√©quence
            sequence_id = str(uuid.uuid4())
            
            # Obtenir les prospects √©ligibles
            if test_mode and test_emails:
                # Mode test avec emails sp√©cifiques
                eligible_prospects = []
                for email in test_emails:
                    prospect = await self.prospects_collection.find_one({"email": email})
                    if prospect:
                        eligible_prospects.append(prospect)
                    else:
                        # Cr√©er un prospect de test temporaire
                        eligible_prospects.append({
                            "email": email,
                            "first_name": "Test",
                            "status": "new",
                            "created_at": datetime.now(timezone.utc)
                        })
            else:
                # Mode production - prospects avec status="new"
                cursor = self.prospects_collection.find({
                    "status": "new",
                    "email": {"$exists": True, "$ne": ""}
                })
                eligible_prospects = await cursor.to_list(length=None)
            
            print(f"üìß Prospects √©ligibles trouv√©s: {len(eligible_prospects)}")
            
            # Filtrer les emails supprim√©s et g√©n√©riques
            filtered_prospects = []
            skipped_count = 0
            
            for prospect in eligible_prospects:
                email = prospect.get("email", "")
                
                # V√©rifier la liste de suppression
                is_suppressed = await self.suppression_manager.is_email_suppressed(email)
                if is_suppressed:
                    skipped_count += 1
                    # Journaliser le skip
                    await self.log_email_event(
                        sequence_id=sequence_id,
                        prospect_email=email,
                        step="email1",
                        event_type="skipped_suppressed",
                        details="Email in suppression list"
                    )
                    continue
                
                # Filtrer les emails g√©n√©riques
                generic_prefixes = ["info@", "contact@", "sales@", "support@", "admin@", "noreply@"]
                if any(email.lower().startswith(prefix) for prefix in generic_prefixes):
                    skipped_count += 1
                    await self.log_email_event(
                        sequence_id=sequence_id,
                        prospect_email=email,
                        step="email1",
                        event_type="skipped_generic",
                        details="Generic email address"
                    )
                    continue
                
                filtered_prospects.append(prospect)
            
            print(f"üìß Prospects apr√®s filtrage: {len(filtered_prospects)} (ignor√©s: {skipped_count})")
            
            # Cr√©er les entr√©es de s√©quence pour chaque prospect
            sequence_entries = []
            current_time = datetime.now(timezone.utc)
            
            for prospect in filtered_prospects:
                for step_name, template_config in self.email_templates.items():
                    # Calculer la date d'envoi
                    delay_days = template_config["delay_days"]
                    scheduled_at = current_time + timedelta(days=delay_days)
                    
                    # √âviter les week-ends pour Email 3 (d√©lai de 5 jours -> 7 jours si weekend)
                    if step_name == "email3" and scheduled_at.weekday() >= 5:  # Samedi (5) ou Dimanche (6)
                        # Reporter au lundi suivant
                        days_to_monday = 7 - scheduled_at.weekday()
                        scheduled_at += timedelta(days=days_to_monday)
                    
                    sequence_entry = {
                        "sequence_id": sequence_id,
                        "prospect_email": prospect.get("email"),
                        "prospect_first_name": prospect.get("first_name", ""),
                        "step": step_name,
                        "status": "scheduled",
                        "scheduled_at": scheduled_at,
                        "created_at": current_time,
                        "test_mode": test_mode
                    }
                    sequence_entries.append(sequence_entry)
            
            # Ins√©rer les entr√©es de s√©quence
            if sequence_entries:
                await self.sequences_collection.insert_many(sequence_entries)
            
            # Envoyer imm√©diatement l'Email 1 (J+0)
            email1_entries = [entry for entry in sequence_entries if entry["step"] == "email1"]
            sent_count = 0
            
            for entry in email1_entries:
                success = await self.send_email(
                    sequence_id=sequence_id,
                    prospect_email=entry["prospect_email"],
                    prospect_first_name=entry["prospect_first_name"],
                    step="email1",
                    test_mode=test_mode
                )
                
                if success:
                    sent_count += 1
                    # Marquer l'entr√©e comme envoy√©e
                    await self.sequences_collection.update_one(
                        {"sequence_id": sequence_id, "prospect_email": entry["prospect_email"], "step": "email1"},
                        {"$set": {"status": "sent", "sent_at": datetime.now(timezone.utc)}}
                    )
                    
                    # Mettre √† jour le statut du prospect
                    await self.prospects_collection.update_one(
                        {"email": entry["prospect_email"]},
                        {
                            "$set": {
                                "status": "contacted",
                                "last_contacted_at": datetime.now(timezone.utc)
                            }
                        }
                    )
            
            # Journaliser le lancement de s√©quence
            await self.suppression_manager.log_gdpr_action(
                action_type="email_sequence_started",
                email="",
                details=f"Started sequence {sequence_id}: {sent_count} sent, {skipped_count} skipped",
                agent_email=agent_email
            )
            
            return {
                "success": True,
                "sequence_id": sequence_id,
                "total_prospects": len(eligible_prospects),
                "filtered_prospects": len(filtered_prospects),
                "skipped_count": skipped_count,
                "email1_sent": sent_count,
                "test_mode": test_mode
            }
            
        except Exception as e:
            logging.error(f"Erreur lors du d√©marrage de s√©quence: {e}")
            return {"success": False, "error": str(e)}
    
    async def send_email(self, sequence_id: str, prospect_email: str, prospect_first_name: str, step: str, test_mode: bool = False) -> bool:
        """Envoyer un email de la s√©quence"""
        try:
            # V√©rifier une derni√®re fois la liste de suppression
            is_suppressed = await self.suppression_manager.is_email_suppressed(prospect_email)
            if is_suppressed:
                await self.log_email_event(
                    sequence_id=sequence_id,
                    prospect_email=prospect_email,
                    step=step,
                    event_type="skipped_suppressed",
                    details="Email suppressed at send time"
                )
                return False
            
            # Obtenir le template d'email
            template_config = self.email_templates.get(step)
            if not template_config:
                raise ValueError(f"Template non trouv√© pour step: {step}")
            
            # G√©n√©rer le lien de d√©sinscription
            unsubscribe_link = self.suppression_manager.build_unsubscribe_link(prospect_email)
            
            # G√©n√©rer le lien CTA avec UTM tracking
            cta_link = f"{self.base_url}/acheter?utm_source=email&utm_campaign=osmozeur_seq1&utm_content={template_config['utm_content']}"
            
            # Rendu du template
            template = Template(template_config["template"])
            html_content = template.render(
                subject=template_config["subject"],
                first_name=prospect_first_name,
                cta_link=cta_link,
                unsubscribe_link=unsubscribe_link
            )
            
            # Cr√©er le message email
            msg = MIMEMultipart('alternative')
            msg['Subject'] = template_config["subject"]
            msg['From'] = f"{self.from_name} <{self.from_email}>"
            msg['To'] = prospect_email
            
            # Version HTML
            html_part = MIMEText(html_content, 'html', 'utf-8')
            msg.attach(html_part)
            
            # Envoyer l'email
            if test_mode:
                # Mode test - simuler l'envoi
                print(f"üìß TEST MODE - Email {step} simul√© pour {prospect_email}")
                await self.log_email_event(
                    sequence_id=sequence_id,
                    prospect_email=prospect_email,
                    step=step,
                    event_type="sent",
                    details="Test mode - simulated send"
                )
                return True
            else:
                # Mode production - envoi r√©el
                try:
                    with smtplib.SMTP(self.smtp_host, self.smtp_port) as server:
                        server.starttls()
                        if self.smtp_password:
                            server.login(self.smtp_username, self.smtp_password)
                        
                        server.send_message(msg)
                    
                    print(f"üìß Email {step} envoy√© avec succ√®s √† {prospect_email}")
                    
                    # Journaliser l'envoi
                    await self.log_email_event(
                        sequence_id=sequence_id,
                        prospect_email=prospect_email,
                        step=step,
                        event_type="sent",
                        details="Email sent successfully"
                    )
                    
                    return True
                    
                except smtplib.SMTPException as e:
                    print(f"‚ùå Erreur SMTP pour {prospect_email}: {e}")
                    
                    # D√©terminer le type d'erreur
                    error_str = str(e).lower()
                    if "550" in error_str or "5.1.1" in error_str:
                        event_type = "hard_bounce"
                        # Ajouter automatiquement √† la liste de suppression
                        await self.suppression_manager.add_email_to_suppression_list(
                            email=prospect_email,
                            reason="hard_bounce",
                            source="email_sequencer",
                            notes=f"Hard bounce from step {step}: {str(e)}",
                            agent_email="email_sequencer"
                        )
                    else:
                        event_type = "soft_bounce"
                    
                    await self.log_email_event(
                        sequence_id=sequence_id,
                        prospect_email=prospect_email,
                        step=step,
                        event_type=event_type,
                        details=str(e)
                    )
                    
                    return False
            
        except Exception as e:
            print(f"‚ùå Erreur lors de l'envoi email: {e}")
            await self.log_email_event(
                sequence_id=sequence_id,
                prospect_email=prospect_email,
                step=step,
                event_type="error",
                details=str(e)
            )
            return False
    
    async def process_scheduled_emails(self) -> Dict[str, Any]:
        """Traiter les emails programm√©s (√† appeler p√©riodiquement)"""
        try:
            current_time = datetime.now(timezone.utc)
            
            # Trouver les emails √† envoyer
            cursor = self.sequences_collection.find({
                "status": "scheduled",
                "scheduled_at": {"$lte": current_time}
            })
            
            scheduled_emails = await cursor.to_list(length=None)
            print(f"üìß Emails programm√©s √† traiter: {len(scheduled_emails)}")
            
            sent_count = 0
            error_count = 0
            
            for email_entry in scheduled_emails:
                try:
                    success = await self.send_email(
                        sequence_id=email_entry["sequence_id"],
                        prospect_email=email_entry["prospect_email"],
                        prospect_first_name=email_entry["prospect_first_name"],
                        step=email_entry["step"],
                        test_mode=email_entry.get("test_mode", False)
                    )
                    
                    if success:
                        sent_count += 1
                        # Marquer comme envoy√©
                        await self.sequences_collection.update_one(
                            {"_id": email_entry["_id"]},
                            {"$set": {"status": "sent", "sent_at": current_time}}
                        )
                    else:
                        error_count += 1
                        # Marquer comme erreur
                        await self.sequences_collection.update_one(
                            {"_id": email_entry["_id"]},
                            {"$set": {"status": "error", "error_at": current_time}}
                        )
                        
                except Exception as e:
                    print(f"‚ùå Erreur traitement email programm√©: {e}")
                    error_count += 1
            
            return {
                "success": True,
                "processed": len(scheduled_emails),
                "sent": sent_count,
                "errors": error_count
            }
            
        except Exception as e:
            print(f"‚ùå Erreur traitement emails programm√©s: {e}")
            return {"success": False, "error": str(e)}
    
    async def log_email_event(self, sequence_id: str, prospect_email: str, step: str, event_type: str, details: str = ""):
        """Journaliser un √©v√©nement email"""
        try:
            event_entry = {
                "sequence_id": sequence_id,
                "prospect_email": prospect_email,
                "step": step,
                "event_type": event_type,  # sent, delivered, opened, clicked, bounced, skipped_suppressed, error
                "details": details,
                "created_at": datetime.now(timezone.utc)
            }
            
            await self.metrics_collection.insert_one(event_entry)
            
        except Exception as e:
            print(f"‚ùå Erreur journalisation √©v√©nement: {e}")
    
    async def get_sequence_metrics(self, sequence_id: str = None, limit: int = 100) -> Dict[str, Any]:
        """Obtenir les m√©triques des s√©quences"""
        try:
            # Filtres
            match_filter = {}
            if sequence_id:
                match_filter["sequence_id"] = sequence_id
            
            # M√©triques g√©n√©rales
            pipeline = [
                {"$match": match_filter},
                {"$group": {
                    "_id": {
                        "sequence_id": "$sequence_id",
                        "step": "$step",
                        "event_type": "$event_type"
                    },
                    "count": {"$sum": 1}
                }}
            ]
            
            metrics_raw = await self.metrics_collection.aggregate(pipeline).to_list(length=None)
            
            # Organiser les m√©triques
            metrics = {}
            for metric in metrics_raw:
                seq_id = metric["_id"]["sequence_id"]
                step = metric["_id"]["step"]
                event_type = metric["_id"]["event_type"]
                count = metric["count"]
                
                if seq_id not in metrics:
                    metrics[seq_id] = {}
                if step not in metrics[seq_id]:
                    metrics[seq_id][step] = {}
                
                metrics[seq_id][step][event_type] = count
            
            # S√©quences actives
            active_sequences = await self.sequences_collection.distinct("sequence_id")
            
            # M√©triques d√©taill√©es par prospect
            cursor = self.metrics_collection.find(match_filter).sort("created_at", -1).limit(limit)
            recent_events = await cursor.to_list(length=None)
            
            # Supprimer les ObjectId
            for event in recent_events:
                if '_id' in event:
                    del event['_id']
                if 'created_at' in event:
                    event['created_at'] = event['created_at'].isoformat()
            
            return {
                "success": True,
                "metrics": metrics,
                "active_sequences": active_sequences,
                "recent_events": recent_events
            }
            
        except Exception as e:
            return {"success": False, "error": str(e)}
    
    async def get_sequence_status(self, sequence_id: str) -> Dict[str, Any]:
        """Obtenir le statut d'une s√©quence sp√©cifique"""
        try:
            # Statuts des emails de la s√©quence
            cursor = self.sequences_collection.find({"sequence_id": sequence_id})
            sequence_entries = await cursor.to_list(length=None)
            
            # M√©triques de la s√©quence
            metrics = await self.get_sequence_metrics(sequence_id)
            
            # Organiser par prospect
            prospects_status = {}
            for entry in sequence_entries:
                email = entry["prospect_email"]
                if email not in prospects_status:
                    prospects_status[email] = {
                        "first_name": entry["prospect_first_name"],
                        "steps": {}
                    }
                
                prospects_status[email]["steps"][entry["step"]] = {
                    "status": entry["status"],
                    "scheduled_at": entry["scheduled_at"].isoformat() if entry.get("scheduled_at") else None,
                    "sent_at": entry["sent_at"].isoformat() if entry.get("sent_at") else None
                }
            
            return {
                "success": True,
                "sequence_id": sequence_id,
                "prospects": prospects_status,
                "metrics": metrics.get("metrics", {}).get(sequence_id, {})
            }
            
        except Exception as e:
            return {"success": False, "error": str(e)}
    
    async def stop_sequence(self, sequence_id: str, agent_email: str = "system") -> Dict[str, Any]:
        """Arr√™ter une s√©quence (annuler les emails non envoy√©s)"""
        try:
            # Marquer les emails programm√©s comme annul√©s
            result = await self.sequences_collection.update_many(
                {"sequence_id": sequence_id, "status": "scheduled"},
                {"$set": {"status": "cancelled", "cancelled_at": datetime.now(timezone.utc)}}
            )
            
            # Journaliser l'arr√™t
            await self.suppression_manager.log_gdpr_action(
                action_type="email_sequence_stopped",
                email="",
                details=f"Stopped sequence {sequence_id}: {result.modified_count} emails cancelled",
                agent_email=agent_email
            )
            
            return {
                "success": True,
                "sequence_id": sequence_id,
                "cancelled_emails": result.modified_count
            }
            
        except Exception as e:
            return {"success": False, "error": str(e)}