#!/usr/bin/env python3
"""
ü§ñ THOMAS CHATBOT OSMOSEURS - VERSION D√âFINITIVE
===============================================
Agent commercial expert en osmoseurs Josmose.com
- Focus 100% osmoseurs et purification d'eau
- Ton bienveillant et commercial
- Connaissance parfaite du catalogue BlueMountain 2025
"""

import json
import logging
from datetime import datetime
from typing import Dict, List, Optional

logger = logging.getLogger(__name__)

class ThomasChatbot:
    def __init__(self):
        """Thomas - Conseiller Expert en Purification d'Eau chez Josmoze"""
        
        # NOUVEAU PROMPT THOMAS V2 PROFESSIONNEL
        self.thomas_identity = """
        IDENTIT√â :
        Tu es Thomas, conseiller expert en purification d'eau chez Josmoze. 
        Tu accueilles chaleureusement les visiteurs avec professionnalisme et bienveillance.

        PERSONNALIT√â :
        - Amical et rassurant
        - Expert technique mais accessible  
        - Pointe d'humour l√©g√®re et appropri√©e
        - Toujours orient√© solution

        MISSION :
        - Comprendre les besoins du prospect
        - Recommander le bon osmoseur
        - Accompagner vers l'achat
        - Rassurer sur la qualit√©/service
        """
        
        # BASE DE CONNAISSANCES OSMOSEURS JOSMOZE.COM V2
        self.osmoseurs_catalog = {
            "osmoseur-essentiel": {
                "name": "Osmoseur Essentiel",
                "price": 449.0,
                "description": "Familles 2-3 personnes, efficace",
                "ideal_for": "Familles 2-3 personnes, solution efficace et √©conomique",
                "features": ["5 √©tapes de filtration", "R√©servoir 12L", "Installation professionnelle"],
                "benefits": "Parfait pour d√©buter, rapport qualit√©-prix excellent",
                "thomas_pitch": "L'Essentiel √† 449‚Ç¨ est parfait pour d√©buter ! Id√©al pour les familles de 2-3 personnes."
            },
            "osmoseur-premium": {
                "name": "Osmoseur Premium", 
                "price": 549.0,
                "description": "Familles 4-5 personnes, technologie avanc√©e",
                "ideal_for": "Familles 4-5 personnes, technologie avanc√©e",
                "features": ["6 √©tapes + remin√©ralisation", "R√©servoir 15L", "Robinet LED", "Auto-rin√ßage"],
                "benefits": "Notre bestseller ! Eau parfaitement √©quilibr√©e",
                "thomas_pitch": "Le Premium √† 549‚Ç¨ est notre bestseller ! Parfait pour les familles de 4-5 personnes avec sa technologie avanc√©e."
            },
            "osmoseur-prestige": {
                "name": "Osmoseur Prestige",
                "price": 899.0,
                "description": "Solution professionnelle, √©cran tactile",
                "ideal_for": "Solution professionnelle, grandes familles, √©cran tactile",
                "features": ["7 √©tapes + UV", "Double r√©servoir 20L", "√âcran tactile", "App mobile"],
                "benefits": "Technologie de pointe, monitoring temps r√©el",
                "thomas_pitch": "Le Prestige √† 899‚Ç¨ est notre solution professionnelle avec √©cran tactile. Pour ceux qui veulent le meilleur !"
            },
            "filtre-douche": {
                "name": "Filtre Douche",
                "price": 39.90,
                "description": "Compl√©ment bien-√™tre peau/cheveux",
                "ideal_for": "Compl√©ment bien-√™tre pour peau et cheveux",
                "features": ["Installation 2 minutes", "Cartouche 6-8 mois", "Anti-calcaire", "Universel"],
                "benefits": "Peau plus douce, cheveux plus brillants",
                "thomas_pitch": "Le Filtre Douche √† 39.90‚Ç¨ est le compl√©ment parfait ! Peau plus douce et cheveux plus brillants."
            }
        }
        
        # R√âPONSES TYPES THOMAS V2
        self.response_templates = {
            "accueil": "Bonjour ! Je suis Thomas, votre conseiller Josmoze. Comment puis-je vous aider √† trouver l'osmoseur parfait pour votre famille ? üòä",
            "budget_serre": "Je comprends, la qualit√© de l'eau n'a pas de prix mais le budget compte ! L'Essentiel √† 449‚Ç¨ est parfait pour d√©buter.",
            "hesitation": "Pas de souci pour r√©fl√©chir ! Puis-je vous poser 2-3 questions pour mieux vous conseiller ?",
            "objection_prix": "C'est vrai que c'est un investissement, mais pensez aux √©conomies sur l'eau en bouteille ! En 6 mois c'est rentabilis√©.",
            "call_to_action": [
                "Voulez-vous que je vous aide √† choisir ?",
                "Puis-je vous montrer notre questionnaire rapide ?",
                "Souhaitez-vous ajouter cet osmoseur √† votre panier ?"
            ]
        }
        
        # AM√âLIORATION THOMAS V2 : Liens cliquables et boutons CTA
        self.product_links = {
            "essentiel": "/produit/osmoseur-essentiel",
            "premium": "/produit/osmoseur-premium", 
            "prestige": "/produit/osmoseur-prestige",
            "filtre-douche": "/produit/filtre-douche"
        }
        
        self.cta_buttons = {
            "add_to_cart": "üõí Ajouter au panier",
            "view_product": "üëÄ Voir le produit",
            "ask_question": "‚ùì Poser une question",
            "get_quote": "üí∞ Devis gratuit",
            "schedule_call": "üìû Rappel gratuit"
        }
        
        # AVANTAGES OSMOSE INVERSE
        self.osmosis_benefits = {
            "puret√©": "√âlimine 99% des contaminants : chlore, nitrates, pesticides, m√©taux lourds, bact√©ries",
            "sant√©": "Eau pure comme en montagne, sans go√ªt ni odeur, id√©ale pour toute la famille",
            "√©conomie": "Divise par 10 le co√ªt de l'eau pure vs bouteilles plastique",
            "√©cologie": "Fini les bouteilles plastique, geste √©cologique majeur",
            "praticit√©": "Eau pure illimit√©e directement au robinet, 24h/24"
        }
        
        # PROCESSUS OSMOSE INVERSE SIMPLIFI√â
        self.how_it_works = [
            "1Ô∏è‚É£ Pr√©-filtration : √âlimine s√©diments et chlore",
            "2Ô∏è‚É£ Membrane osmose : Filtre ultra-fin (0.0001 micron)",
            "3Ô∏è‚É£ Post-filtration : Affinage du go√ªt",
            "4Ô∏è‚É£ Remin√©ralisation : √âquilibre parfait (mod√®les Premium/Prestige)",
            "5Ô∏è‚É£ Stockage : R√©servoir eau pure toujours disponible"
        ]
    
    def format_response_with_links_and_ctas(self, text: str, product_key: str = None, cta_actions: List[str] = None) -> Dict:
        """üöÄ THOMAS V2 COMMERCIAL - Formatter r√©ponse avec liens cliquables et donn√©es panier"""
        
        # Ajouter liens cliquables aux produits mentionn√©s
        formatted_text = text
        
        # Remplacer mentions produits par liens cliquables (√©viter double remplacement)
        product_replacements = {
            "Osmoseur Essentiel": f'<a href="{self.product_links["essentiel"]}" class="product-link">Osmoseur Essentiel (449‚Ç¨)</a>',
            "Osmoseur Premium": f'<a href="{self.product_links["premium"]}" class="product-link">Osmoseur Premium (549‚Ç¨)</a>',
            "Osmoseur Prestige": f'<a href="{self.product_links["prestige"]}" class="product-link">Osmoseur Prestige (899‚Ç¨)</a>',
            "Filtre Douche": f'<a href="{self.product_links["filtre-douche"]}" class="product-link">Filtre Douche (39.90‚Ç¨)</a>',
            "l'Essentiel": f'l\'<a href="{self.product_links["essentiel"]}" class="product-link">Essentiel (449‚Ç¨)</a>',
            "le Premium": f'le <a href="{self.product_links["premium"]}" class="product-link">Premium (549‚Ç¨)</a>',
            "le Prestige": f'le <a href="{self.product_links["prestige"]}" class="product-link">Prestige (899‚Ç¨)</a>'
        }
        
        for mention, link in product_replacements.items():
            # √âviter double remplacement en v√©rifiant si d√©j√† transform√©
            if mention in formatted_text and '<a href=' not in formatted_text.replace(mention, ''):
                formatted_text = formatted_text.replace(mention, link, 1)  # Une seule occurrence
        
        # üöÄ NOUVEAUT√â PHASE 8 - Donn√©es panier pour "Add to Cart" fonctionnel
        cart_data = None
        if product_key and product_key in self.osmoseurs_catalog:
            product_info = self.osmoseurs_catalog[product_key]
            
            # Mapping des cl√©s internes vers IDs de base de donn√©es
            product_id_mapping = {
                "osmoseur-essentiel": "osmoseur-essentiel",
                "osmoseur-premium": "osmoseur-premium", 
                "osmoseur-prestige": "osmoseur-prestige",
                "filtre-douche": "purificateur-portable-hydrogene"  # Ajustement selon la base de donn√©es
            }
            
            cart_data = {
                "id": product_id_mapping.get(product_key, product_key),
                "name": product_info["name"],
                "price": product_info["price"],
                "image": "https://images.unsplash.com/photo-1628239532623-c035054bff4e?w=400&h=400&fit=crop&q=80",  # Image par d√©faut
                "quantity": 1
            }
        
        # Ajouter boutons CTA si sp√©cifi√©
        if cta_actions:
            cta_html = "\n\n<div class='thomas-cta-buttons' style='margin-top: 15px;'>\n"
            for action in cta_actions:
                if action in self.cta_buttons:
                    if action == "add_to_cart" and product_key:
                        cta_html += f'  <button class="cta-button add-to-cart thomas-add-to-cart" data-product-id="{cart_data["id"] if cart_data else product_key}" style="margin: 5px; padding: 8px 15px; background: #10b981; color: white; border: none; border-radius: 5px; cursor: pointer; font-weight: 600;">{self.cta_buttons[action]}</button>\n'
                    elif action == "view_product" and product_key:
                        cta_html += f'  <a href="{self.product_links.get(product_key, "#")}" class="cta-button view-product" style="display: inline-block; margin: 5px; padding: 8px 15px; background: #059669; color: white; text-decoration: none; border-radius: 5px;">{self.cta_buttons[action]}</a>\n'
                    elif action == "ask_question":
                        cta_html += f'  <button class="cta-button ask-question" style="margin: 5px; padding: 8px 15px; background: #dc2626; color: white; border: none; border-radius: 5px; cursor: pointer;">{self.cta_buttons[action]}</button>\n'
                    else:
                        cta_html += f'  <button class="cta-button {action}" style="margin: 5px; padding: 8px 15px; background: #7c3aed; color: white; border: none; border-radius: 5px; cursor: pointer;">{self.cta_buttons[action]}</button>\n'
            cta_html += "</div>"
            formatted_text += cta_html
        
        # Retourner un dictionnaire avec le texte format√© et les donn√©es panier
        return {
            "formatted_text": formatted_text,
            "cart_data": cart_data,
            "product_recommended": product_key
        }

    def get_user_context_analysis(self, message: str, conversation_history: List = None) -> Dict:
        """üöÄ THOMAS V2 - Analyser contexte utilisateur pour recommandations personnalis√©es"""
        
        analysis = {
            "family_size": None,
            "budget_range": None,
            "concerns": [],
            "previous_questions": [],
            "intent": "information"
        }
        
        message_lower = message.lower()
        
        # Analyser taille famille
        if any(word in message_lower for word in ["2", "couple", "deux"]):
            analysis["family_size"] = "2-3"
        elif any(word in message_lower for word in ["4", "quatre", "famille"]):
            analysis["family_size"] = "4-5"
        elif any(word in message_lower for word in ["5", "6", "grand", "nombreux"]):
            analysis["family_size"] = "5+"
        
        # Analyser budget
        if any(word in message_lower for word in ["budget", "cher", "prix", "co√ªt"]):
            if any(word in message_lower for word in ["serr√©", "limit√©", "√©conomique"]):
                analysis["budget_range"] = "budget_serre"
            elif any(word in message_lower for word in ["√©lev√©", "premium", "haut"]):
                analysis["budget_range"] = "premium"
            else:
                analysis["budget_range"] = "moyen"
        
        # Analyser pr√©occupations
        if any(word in message_lower for word in ["sant√©", "enfant", "b√©b√©"]):
            analysis["concerns"].append("health")
        if any(word in message_lower for word in ["go√ªt", "odeur", "chlore"]):
            analysis["concerns"].append("taste")
        if any(word in message_lower for word in ["√©conomie", "bouteille", "plastique"]):
            analysis["concerns"].append("economy")
        
        # Analyser intention
        if any(word in message_lower for word in ["acheter", "commander", "panier"]):
            analysis["intent"] = "purchase"
        elif any(word in message_lower for word in ["comparer", "diff√©rence"]):
            analysis["intent"] = "comparison"
        elif any(word in message_lower for word in ["h√©site", "r√©fl√©chir"]):
            analysis["intent"] = "hesitation"
        
        return analysis
    
    def generate_response(self, user_message: str, user_context: Dict = None) -> Dict:
        """
        üöÄ THOMAS V2 - G√©n√®re r√©ponse avec liens cliquables et CTA fonctionnels
        """
        try:
            message_lower = user_message.lower()
            
            # Analyser contexte utilisateur pour personnalisation
            context_analysis = self.get_user_context_analysis(user_message, 
                user_context.get('conversation_history', []) if user_context else [])
            
            # ACCUEIL THOMAS V2 AM√âLIOR√â
            if any(word in message_lower for word in ["bonjour", "salut", "hello", "bonsoir", "coucou"]):
                formatted_response = self.format_response_with_links_and_ctas(
                    self.response_templates["accueil"],
                    cta_actions=["view_product", "ask_question"]
                )
                return {
                    "message": formatted_response["formatted_text"],
                    "suggestions": ["üí∞ Voir les prix", "üè† Recommandation famille", "üíß Comment √ßa marche ?"],
                    "cart_data": formatted_response.get("cart_data"),
                    "type": "greeting"
                }
            
            # DEMANDE DE PRIX AVEC LIENS CLIQUABLES
            if any(word in message_lower for word in ["prix", "co√ªt", "combien", "tarif", "budget"]):
                prix_message = f"""üí∞ **Nos prix osmoseurs Josmoze** :

üîπ **<a href="{self.product_links["essentiel"]}" class="product-link">Osmoseur Essentiel (449‚Ç¨)</a>**
   üë®‚Äçüë©‚Äçüëß Familles 2-3 personnes, efficace

üî∏ **<a href="{self.product_links["premium"]}" class="product-link">Osmoseur Premium (549‚Ç¨)</a>** ‚≠ê *Le plus populaire*
   üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Familles 4-5 personnes, technologie avanc√©e

üîπ **<a href="{self.product_links["prestige"]}" class="product-link">Osmoseur Prestige (899‚Ç¨)</a>**
   üè¢ Solution professionnelle, √©cran tactile

üöø **<a href="{self.product_links["filtre-douche"]}" class="product-link">Filtre Douche (39.90‚Ç¨)</a>**
   ‚ú® Compl√©ment bien-√™tre peau/cheveux

{self.response_templates["objection_prix"]}

{self.response_templates["call_to_action"][0]}"""
                
                formatted_response = self.format_response_with_links_and_ctas(
                    prix_message,
                    product_key="premium",  # Recommandation par d√©faut
                    cta_actions=["add_to_cart", "get_quote", "ask_question"]
                )
                
                return {
                    "message": formatted_response["formatted_text"],
                    "suggestions": ["üõí Ajouter Premium au panier", "‚ùì Plus d'infos", "üìû Parler √† un expert"],
                    "cart_data": formatted_response.get("cart_data"),
                    "type": "pricing"
                }
            
            # OBJECTION BUDGET - TON ULTRA BIENVEILLANT V2
            if any(word in message_lower for word in ["cher", "ch√®re", "budget", "trop", "moins cher", "√©conomique", "argent", "co√ªteux"]):
                return {
                    "message": f"""üòä **{self.response_templates["budget_serre"]}**

üí° **Laissez-moi vous expliquer pourquoi c'est un excellent investissement** :

üè† **L'Essentiel √† 449‚Ç¨** :
‚úÖ Eau pure illimit√©e pour toute la famille  
‚úÖ Fini les bouteilles plastique (√©conomie 100‚Ç¨/mois)
‚úÖ Sant√© de votre famille prot√©g√©e
‚úÖ Installation pro + garantie incluses
‚úÖ **Rentabilis√© en 4-5 mois seulement !**

üíö **Ma promesse** : Vous allez adorer avoir une eau pure directement au robinet, et votre portefeuille aussi !

{self.response_templates["call_to_action"][1]}""",
                    "suggestions": ["üìã Questionnaire rapide", "üõí Essentiel 449‚Ç¨", "üí¨ Autres questions"]
                }
            
            # H√âSITATION - ACCOMPAGNEMENT V2
            if any(word in message_lower for word in ["h√©site", "r√©fl√©chir", "voir", "d√©cider", "peut-√™tre"]):
                return {
                    "message": f"""{self.response_templates["hesitation"]}

üéØ **Questions pour vous conseiller** :
1Ô∏è‚É£ Combien de personnes dans votre foyer ?
2Ô∏è‚É£ Quel est votre budget approximatif ?
3Ô∏è‚É£ Priorit√© : √©conomique ou haut de gamme ?

Je trouve l'osmoseur parfait selon vos besoins ! üòä""",
                    "suggestions": ["üë®‚Äçüë©‚Äçüëß 2-3 personnes", "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ 4-5 personnes", "üí∞ Budget serr√©"]
                }
            
            # RECOMMANDATION FAMILLE - PERSONNALIS√âE SELON CONTEXTE
            if any(word in message_lower for word in ["famille", "personnes", "foyer", "combien de personnes", "quel osmoseur"]):
                
                # Recommandation intelligente selon contexte
                if context_analysis["family_size"] == "4-5" or any(word in message_lower for word in ["4", "quatre", "4-5", "4 personnes", "famille 4"]):
                    produit = self.osmoseurs_catalog["osmoseur-premium"]
                    product_key = "premium"
                    
                    response_text = f"""üéØ **Pour une famille de 4 personnes, je recommande le <a href="{self.product_links[product_key]}" class="product-link">{produit['name']} (549‚Ç¨)</a> !**

{produit['thomas_pitch']}

‚úÖ **Pourquoi c'est parfait pour vous** :
‚Ä¢ 4-5 personnes = consommation optimale
‚Ä¢ 6 √©tapes + remin√©ralisation = eau parfaitement √©quilibr√©e  
‚Ä¢ R√©servoir 15L = d√©bit suffisant
‚Ä¢ Auto-rin√ßage = maintenance minimale

üí∞ **Prix** : {produit['price']}‚Ç¨ - Notre bestseller !

{self.response_templates["call_to_action"][2]}"""
                    
                    formatted_response = self.format_response_with_links_and_ctas(
                        response_text, 
                        product_key=product_key,
                        cta_actions=["add_to_cart", "view_product", "ask_question"]
                    )
                    
                    return {
                        "message": formatted_response,
                        "suggestions": ["üõí Ajouter Premium 549‚Ç¨", "üìã Comparer mod√®les", "‚ùì Plus d'infos"]
                    }
                
                elif context_analysis["family_size"] == "2-3" or any(word in message_lower for word in ["2", "3", "deux", "trois", "couple", "petit"]):
                    produit = self.osmoseurs_catalog["osmoseur-essentiel"]
                    product_key = "essentiel"
                    
                    response_text = f"""üéØ **Pour 2-3 personnes, l'<a href="{self.product_links[product_key]}" class="product-link">{produit['name']} (449‚Ç¨)</a> est id√©al !**

{produit['thomas_pitch']}

‚úÖ **Parfait pour votre foyer** :
‚Ä¢ 2-3 personnes = dimensionnement optimal
‚Ä¢ 5 √©tapes de filtration = efficacit√© prouv√©e
‚Ä¢ Installation professionnelle incluse
‚Ä¢ √âconomique sans compromis qualit√©

{self.response_templates["call_to_action"][2]}"""
                    
                    formatted_response = self.format_response_with_links_and_ctas(
                        response_text,
                        product_key=product_key,
                        cta_actions=["add_to_cart", "view_product", "ask_question"]
                    )
                    
                    return {
                        "message": formatted_response,
                        "suggestions": ["üõí Essentiel 449‚Ç¨", "‚¨ÜÔ∏è Voir Premium", "‚ùì Questions"]
                    }
                else:
                    # R√©ponse g√©n√©rale pour recommandation
                    return {
                        "message": f"""üè† **Laissez-moi vous conseiller selon votre foyer !**

üéØ **Mes recommandations par famille** :
‚Ä¢ **2-3 personnes** ‚Üí Essentiel 449‚Ç¨ (efficace et √©conomique)
‚Ä¢ **4-5 personnes** ‚Üí Premium 549‚Ç¨ ‚≠ê (notre bestseller !)
‚Ä¢ **5+ personnes** ‚Üí Prestige 899‚Ç¨ (solution professionnelle)

{self.response_templates["hesitation"]}""",
                        "suggestions": ["üë®‚Äçüë©‚Äçüëß 2-3 personnes", "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ 4-5 personnes", "üë• 5+ personnes"]
                    }
            if any(word in message_lower for word in ["essentiel", "premium", "prestige", "filtre douche"]):
                if "essentiel" in message_lower:
                    produit = self.osmoseurs_catalog["osmoseur-essentiel"]
                    return {
                        "message": f"""üîπ **{produit['name']} - {produit['price']}‚Ç¨**

{produit['thomas_pitch']}

‚úÖ **Caract√©ristiques** :
{chr(10).join(f'‚Ä¢ {feature}' for feature in produit['features'])}

üéØ **Id√©al pour** : {produit['ideal_for']}

{self.response_templates["call_to_action"][2]}""",
                        "suggestions": ["üõí Ajouter au panier", "üìã Comparer", "‚ùì Questions"]
                    }
                elif "premium" in message_lower:
                    produit = self.osmoseurs_catalog["osmoseur-premium"]
                    return {
                        "message": f"""üî∏ **{produit['name']} - {produit['price']}‚Ç¨** ‚≠ê

{produit['thomas_pitch']}

‚úÖ **Caract√©ristiques** :
{chr(10).join(f'‚Ä¢ {feature}' for feature in produit['features'])}

üéØ **Id√©al pour** : {produit['ideal_for']}

{self.response_templates["call_to_action"][2]}""",
                        "suggestions": ["üõí Ajouter au panier", "üìã Comparer", "‚ùì Questions"]
                    }
                elif "prestige" in message_lower:
                    produit = self.osmoseurs_catalog["osmoseur-prestige"] 
                    return {
                        "message": f"""üîπ **{produit['name']} - {produit['price']}‚Ç¨**

{produit['thomas_pitch']}

‚úÖ **Caract√©ristiques** :
{chr(10).join(f'‚Ä¢ {feature}' for feature in produit['features'])}

üéØ **Id√©al pour** : {produit['ideal_for']}

{self.response_templates["call_to_action"][2]}""",
                        "suggestions": ["üõí Ajouter au panier", "üìã Comparer", "‚ùì Questions"]
                    }
                elif "filtre" in message_lower and "douche" in message_lower:
                    produit = self.osmoseurs_catalog["filtre-douche"]
                    return {
                        "message": f"""üöø **{produit['name']} - {produit['price']}‚Ç¨**

{produit['thomas_pitch']}

‚úÖ **Avantages** :
{chr(10).join(f'‚Ä¢ {feature}' for feature in produit['features'])}

üéØ **Parfait pour** : {produit['ideal_for']}

Installation en 2 minutes, r√©sultats imm√©diats ! ‚ú®""",
                        "suggestions": ["üõí Ajouter 39.90‚Ç¨", "üíß + Osmoseur", "‚ùì Installation"]
                    }
            
            # R√âPONSE G√âN√âRALE THOMAS V2 - EXPERTISE ACCESSIBLE
            return {
                "message": f"""Thomas ici ! üòä Expert en purification d'eau chez Josmoze.

üéØ **Ma mission** : Vous aider √† choisir l'osmoseur parfait !

üíß **Notre gamme 2025** :
‚Ä¢ **Essentiel 449‚Ç¨** : Familles 2-3 pers.
‚Ä¢ **Premium 549‚Ç¨** : Familles 4-5 pers. ‚≠ê
‚Ä¢ **Prestige 899‚Ç¨** : Solution professionnelle  
‚Ä¢ **Filtre Douche 39.90‚Ç¨** : Bien-√™tre quotidien

{self.response_templates["call_to_action"][0]}""",
                "suggestions": ["üí∞ Voir les prix", "üìã Questionnaire", "üí¨ Poser une question"]
            }
            
        except Exception as e:
            logger.error(f"Erreur g√©n√©ration r√©ponse Thomas: {str(e)}")
            # Fallback avec nouveau prompt V2
            return {
                "message": self.response_templates["accueil"],
                "suggestions": ["üí∞ Voir les prix", "üè† Recommandation", "‚ùì Questions"]
            }

# Instance globale Thomas Osmoseurs
thomas_osmoseurs = ThomasChatbot()

def get_thomas_response(message: str, user_context: Dict = None) -> Dict:
    """Interface pour Thomas Expert Osmoseurs"""
    return thomas_osmoseurs.generate_response(message, user_context)